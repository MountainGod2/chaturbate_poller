[tool.poetry]
name = "chaturbate-poller"
version = "0.3.11"
description = "Poller for the Chaturbate events API."
authors = ["MountainGod2"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/MountainGod2/chaturbate_poller"
documentation = "https://mountaingod2.github.io/chaturbate_poller/"

[tool.poetry.dependencies]
python = "^3.10"
httpx = {extras = ["http2"], version = "^0.27.0"}
python-dotenv = "^1.0.1"
pydantic = "^2.6.4"
backoff = "^2.2.1"
asyncio = "^3.4.3"

[tool.poetry.dev-dependencies]

[tool.poetry.group.dev.dependencies]
mypy = "^1.9.0"
pytest = "^8.1.1"
pytest-asyncio = "^0.23.6"
respx = "^0.21.0"
httpx = "^0.27.0"
pytest-mock = "^3.14.0"
pytest-cov = "^5.0.0"
myst-nb = {version = "^1.0.0", python = "^3.9"}
sphinx-autoapi = "^3.0.0"
sphinx-rtd-theme = "^2.0.0"
python-semantic-release = "^9.4.0"
ruff = "^0.3.4"
poetry = "^1.8.2"

[tool.semantic_release]
version_variable = "pyproject.toml:version"
version_toml = [
    "pyproject.toml:tool.poetry.version",
]                                                    # version location
branch = "main"                                      # branch to make releases of
changelog_file = "CHANGELOG.md"                      # changelog file
build_command = "pip install poetry && poetry build" # build dists 

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812", # missing-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
    "ANN101", "ANN102", # missing-type-self (redundant)
    "D203", # one-blank-line-before-class (incompatable)
    "D213", # multi-line-summary-second-line (incompatable)
    "S101" # disable assert warning for tests
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true
docstring-code-line-length = "dynamic"