[tool.poetry]
  authors = ["MountainGod2"]
  description = "Poller for the Chaturbate events API."
  documentation = "https://mountaingod2.github.io/chaturbate_poller/"
  license = "MIT"
  name = "chaturbate-poller"
  readme = "README.md"
  repository = "https://github.com/MountainGod2/chaturbate_poller"
  version = "0.9.0"

[tool.poetry.scripts]
  chaturbate_poller = "chaturbate_poller.__main__:main"

[tool.poetry.dependencies]
  asyncio = "^3.4.3"
  backoff = "^2.2.1"
  httpx = {extras = ["http2"], version = "^0.27.0"}
  influxdb-client = "^1.46.0"
  pydantic = "^2.8.2"
  python = "^3.10"
  python-dotenv = "^1.0.1"
  pyyaml = "^6.0.2"

[tool.poetry.group.dev.dependencies]
  bandit = "^1.7.9"
  httpx = "^0.27.0"
  mypy = "^1.11.1"
  myst-nb = {version = "^1.1.2", python = "^3.9"}
  poetry = "^1.8.3"
  pre-commit = "^3.8.0"
  pylint = "^3.3.1"
  pytest = "^8.3.2"
  pytest-asyncio = "^0.24.0"
  pytest-cov = "^5.0.0"
  pytest-mock = "^3.14.0"
  python-semantic-release = "^9.8.9"
  respx = "^0.21.1"
  ruff = "^0.6.8"
  sphinx-autoapi = "^3.3.2"
  sphinx-rtd-theme = "^2.0.0"

[build-system]
  build-backend = "poetry.core.masonry.api"
  requires = ["poetry-core>=1.0.0"]

[tool.semantic_release]
  branch = "main"
  build_command = "pip install poetry && poetry build"
  changelog_file = "CHANGELOG.md"
  version_toml = ["pyproject.toml:tool.poetry.version"]

[tool.coverage]
  omit = ["examples/*", "tests/*"]
  report.fail_under = 80
  report.show_missing = true
  report.skip_covered = true
  run.branch = true
  source = ["chaturbate_poller"]

[tool.pytest]
  ini_options.addopts = "--cov=chaturbate_poller --cov-report=term-missing --cov-report=xml --cov-fail-under=80"
  ini_options.asyncio_default_fixture_loop_scope = "function"
  ini_options.asyncio_mode = "strict"
  ini_options.testpaths = "tests"

[tool.ruff]
  exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "docs",
    "node_modules",
    "out",
    "site-packages",
    "venv",
  ]
  extend-include = ["*.ipynb"]
  indent-width = 4
  line-length = 100
  src = ["docs", "src", "tests"]
  target-version = "py311"

  format.docstring-code-format = true
  format.docstring-code-line-length = "dynamic"
  format.indent-style = "space"
  format.line-ending = "auto"
  format.quote-style = "double"
  format.skip-magic-trailing-comma = false

  lint.fixable = ["ALL"]
  lint.ignore = [
    "ANN101", # missing-type-self (depricated)
    "ANN102", # missing-type-cls (depricated)
    "COM812", # conflicts with Ruff formatter
    "ISC001", # conflicts with Ruff formatter
  ]
  lint.pydocstyle.convention = "google"
  lint.select = ["ALL"]
  lint.unfixable = []

[tool.mypy]
  disable_error_code = "import-untyped"
  exclude = ["out"]

[tool.bandit]
  exclude_dirs = [".venv", "tests"]
