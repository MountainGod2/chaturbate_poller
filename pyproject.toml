[project]
authors = [{ name = "MountainGod2", email = "admin@reid.ca" }]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed"
]
dependencies = [
  "backoff==2.2.1",
  "httpx==0.28.1",
  "influxdb-client==1.48.0",
  "json-log-formatter==1.1",
  "pydantic==2.10.6",
  "python-dotenv==1.0.1",
  "rich-click==1.8.5",
]
description = "Python library for interacting with the Chaturbate Events API"
keywords = ["api", "chaturbate", "poller", "python"]
license = { file = "LICENSE" }
name = "chaturbate-poller"
optional-dependencies.docs = [
  "myst-nb==1.1.2",
  "sphinx-autoapi==3.4.0",
  "sphinx-rtd-theme==3.0.2",
]
optional-dependencies.examples = ["phue==1.1"]
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.11"
scripts = { chaturbate_poller = "chaturbate_poller.__main__:cli" }
urls.documentation = "https://mountaingod2.github.io/chaturbate_poller/"
urls.homepage = "https://github.com/MountainGod2/chaturbate_poller"
urls.issues = "https://github.com/MountainGod2/chaturbate_poller/issues"
urls.repository = "https://github.com/MountainGod2/chaturbate_poller"
version = "1.9.0"

[dependency-groups]
dev = [
  "bandit==1.8.2",
  "mypy==1.14.1",
  "pre-commit==4.1.0",
  "pylint==3.3.4",
  "pytest-asyncio==0.25.3",
  "pytest-cov==6.0.0",
  "pytest-mock==3.14.0",
  "pytest==8.3.4",
  "python-semantic-release==9.17.0",
  "respx==0.22.0",
  "ruff==0.9.4",
  "types-python-dateutil>=2.9.0.20241206",
]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling>=1.18.0", "hatch-vcs", "hatch-fancy-pypi-readme"]

[tool.pylint]
fail-under = 8.0
ignore-paths = [".venv", "build", "dist", "docs", "examples", "out", "tests"]
typecheck.signature-mutators = [
  "click.decorators.argument",
  "click.decorators.confirmation_option",
  "click.decorators.help_option",
  "click.decorators.option",
  "click.decorators.pass_context",
  "click.decorators.version_option",
]

[tool.semantic_release]
branch = "main"
build_command = "pip install uv && uv build"
changelog_file = "CHANGELOG.md"
version_toml = ["pyproject.toml:project.version"]

[tool.coverage]
omit = ["**/__init__.py", "examples/*", "tests/*"]
report.fail_under = 90
report.show_missing = true
report.skip_covered = true
report.exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]
run.branch = true
source = ["src/chaturbate_poller"]

[tool.pytest]
ini_options.addopts = """
    -vv --cov=chaturbate_poller
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=90
    --junitxml=junit.xml
    -o junit_family=legacy
"""
ini_options.asyncio_default_fixture_loop_scope = "function"
ini_options.asyncio_mode = "strict"
ini_options.testpaths = "tests"

[tool.autopep8]
aggressive = 3
in-place = true
max_line_length = 100
recursive = true

[tool.ruff]
fix = true
format.docstring-code-format = true
format.docstring-code-line-length = "dynamic"
format.indent-style = "space"
format.line-ending = "auto"
format.preview = true
format.quote-style = "double"
format.skip-magic-trailing-comma = false
line-length = 100
extend-exclude = ["*.pyi"]
lint.fixable = ["ALL"]
lint.ignore = [
  "COM812",
  "CPY001", # Per file copyright notice
  "D203",
  "D213",   # Docs-related
  "INP001",
  "ISC001", # Examples-related
]
lint.per-file-ignores."docs/*" = [
  "ANN001",
  "ANN201",
  "D100",
  "D103",
  "PLE1142",
  "T201",
]
lint.per-file-ignores."examples/*" = [
  "ANN001",
  "ANN201",
  "D100",
  "D103",
  "T201",
]
lint.per-file-ignores."out/*" = ["ALL"]
lint.per-file-ignores."tests/*" = [
  "ANN401",
  "D100",
  "FBT001",
  "PLR0913",
  "PLR2004",
  "PLR6301",
  "S101",
  "SIM117",
  "SLF001",
]
lint.pydocstyle.convention = "google"
lint.select = ["ALL"]
lint.unfixable = []
target-version = "py313"

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
show_error_codes = true

[tool.bandit]
exclude_dirs = [".venv", "tests"]
