name: Container

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * 1" # Weekly
  push:
    tags: ["v*"]

env:
  GHCR_REGISTRY: ghcr.io
  IMAGE_NAME: mountaingod2/chaturbate_poller

permissions:
  contents: read
  packages: write
  security-events: write
  attestations: write
  id-token: write

concurrency:
  group: container-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-24.04
    outputs:
      ghcr-image: ${{ steps.image.outputs.ghcr-image }}
      dockerhub-image: ${{ steps.image.outputs.dockerhub-image }}
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: |
            ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
            ${{ env.IMAGE_NAME }}
          tags: |
            type=schedule,pattern=nightly
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=sha,format=long,prefix=

      - name: Build and push
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: true
          provenance: true

      - name: Set image outputs
        id: image
        run: |
          echo "ghcr-image=${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT
          echo "dockerhub-image=${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT

  test:
    needs: build
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        registry: [ghcr, dockerhub]
    steps:
      - name: Test GHCR image
        if: matrix.registry == 'ghcr'
        run: |
          docker run --rm ${{ needs.build.outputs.ghcr-image }}:${{ github.sha }} --help

      - name: Test Docker Hub image
        if: matrix.registry == 'dockerhub'
        run: |
          docker run --rm ${{ needs.build.outputs.dockerhub-image }}:${{ github.sha }} --help

  security:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # v0.31.0
        with:
          image-ref: ${{ needs.build.outputs.ghcr-image }}:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@ce28f5bb42b7a9f2c824e633a3f6ee835bab6858 # v3
        with:
          sarif_file: trivy-results.sarif

  attest:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Attest GHCR provenance
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2
        with:
          subject-name: ${{ needs.build.outputs.ghcr-image }}
          subject-digest: ${{ needs.build.outputs.digest }}
