name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  merge_group:
  workflow_dispatch:

env:
  DEFAULT_PYTHON: "3.13"
  UV_CACHE_DIR: /tmp/uv-cache
  FORCE_COLOR: "1"

permissions:
  contents: read
  security-events: write
  pull-requests: write
  checks: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  changes:
    runs-on: ubuntu-24.04
    outputs:
      code: ${{ steps.filter.outputs.code }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: dorny/paths-filter@7267a8516b6f92bdb098633497bad573efdbf271 # v2
        id: filter
        with:
          filters: |
            code:
              - 'src/**'
              - 'tests/**'
              - 'pyproject.toml'
              - 'uv.lock'
              - 'Dockerfile'
              - '.github/workflows/**'
            docs:
              - 'docs/**'
              - '*.md'

  quality-checks:
    if: needs.changes.outputs.code == 'true'
    needs: changes
    uses: ./.github/workflows/_shared-build-test.yml
    with:
      python-version: "3.13"
      install-groups: "dev"
      run-lint: true
      run-type-check: true
      artifact-suffix: quality

  test:
    if: needs.changes.outputs.code == 'true'
    needs: changes
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]
    uses: ./.github/workflows/_shared-build-test.yml
    with:
      python-version: ${{ matrix.python-version }}
      install-groups: "dev"
      run-tests: true
      sonar-enabled: ${{ matrix.python-version == '3.13' }}
      coverage-upload: ${{ matrix.python-version == '3.13' }}
      artifact-suffix: py${{ matrix.python-version }}
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security-events:
    if: needs.changes.outputs.code == 'true'
    needs: changes
    uses: ./.github/workflows/_shared-build-test.yml
    with:
      python-version: "3.13"
      install-groups: "dev"
      run-security: true
      artifact-suffix: security

  docs:
    permissions:
      contents: write
    if: needs.changes.outputs.docs == 'true' || needs.changes.outputs.code == 'true'
    needs: changes
    uses: ./.github/workflows/_shared-build-test.yml
    with:
      python-version: "3.13"
      install-groups: "docs"
      artifact-suffix: docs
      extra-commands: |
        rm -rf docs/_build
        uv run sphinx-build docs docs/_build/html -W

  docs-deploy:
    permissions:
      contents: write
      pages: write
      id-token: write
    needs: docs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-24.04
    steps:
      - name: Download docs artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: workflow-artifacts-${{ github.run_id }}-docs
          path: ./

      - name: Deploy to Pages
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
