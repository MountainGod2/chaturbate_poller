name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  merge_group:
  workflow_dispatch:

env:
  UV_CACHE_DIR: /tmp/uv-cache
  DEFAULT_PYTHON: "3.13"

permissions:
  contents: read
  security-events: write  # For CodeQL
  pull-requests: write    # For dependency review comments

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-24.04
    outputs:
      python-version: ${{ steps.set.outputs.python }}
    steps:
      - id: set
        run: echo "python=${{ env.DEFAULT_PYTHON }}" >> "$GITHUB_OUTPUT"

  lint-test:
    name: Lint, Typecheck & Test
    needs: setup
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: [3.12, 3.13]
      fail-fast: false  # Continue with other versions if one fails
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up UV & Python
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}
          cache-dependency-glob: uv.lock

      - name: Verify Python Version
        run: python --version

      - name: Install Dependencies
        run: uv sync

      - name: Lint & Typecheck
        id: lint
        continue-on-error: true  # Continue to tests even if linting fails
        run: |
            uv run ruff format ./
            uv run ruff check --fix ./
            uv run mypy ./
            uv run basedpyright ./
            uv run pylint ./
            uv run bandit -c pyproject.toml -r ./

      - name: Run Tests
        id: test
        run: uv run pytest --cov=src --cov-report=xml --cov-report=term

      - name: Upload Coverage to Codecov
        if: matrix.python-version == needs.setup.outputs.python-version
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false  # Don't fail workflow if coverage upload fails

      - name: Initialize CodeQL
        if: matrix.python-version == needs.setup.outputs.python-version
        uses: github/codeql-action/init@v3
        with:
          languages: python
          build-mode: none

      - name: Perform CodeQL Analysis
        if: matrix.python-version == needs.setup.outputs.python-version
        uses: github/codeql-action/analyze@v3
        with:
          category: /language:python

      - name: Scan Codebase with SonarCloud
        if: matrix.python-version == needs.setup.outputs.python-version
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Fail on Linting Errors
        if: steps.lint.outcome == 'failure' && steps.test.outcome == 'success'
        run: |
          echo "::error::Linting failed but tests passed. Please fix linting issues before merging."
          exit 1

      - name: Upload Test Results to Codecov on Failure
        if: failure() && matrix.python-version == needs.setup.outputs.python-version && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  docs:
    name: Build & Deploy Documentation
    needs: lint-test
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock

      - run: uv sync --group=docs

      - name: Build Docs with Sphinx
        run: uv run -m sphinx docs -T -E -a -j auto -b html -D language=en docs/_build/html

      - name: Check Links
        run: uv run -m sphinx docs -b linkcheck docs/_build/linkcheck

      - name: Deploy Docs to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
          force_orphan: true  # Creates a clean deployment
          full_commit_message: "docs: update documentation site"
