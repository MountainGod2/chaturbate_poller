name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  merge_group:
  workflow_dispatch:

env:
  DEFAULT_PYTHON: "3.13"
  UV_CACHE_DIR: /tmp/uv-cache
  FORCE_COLOR: "1"
  UV_COMPILE_BYTECODE: "1"
  UV_CACHE_COMPRESSION: "1"
  UV_CONCURRENT_DOWNLOADS: "4"

permissions:
  contents: write
  security-events: write
  pull-requests: write
  checks: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  changes:
    runs-on: ubuntu-24.04
    outputs:
      code: ${{ steps.filter.outputs.code }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: dorny/paths-filter@7267a8516b6f92bdb098633497bad573efdbf271 # v2
        id: filter
        with:
          filters: |
            code:
              - 'src/**'
              - 'tests/**'
              - 'examples/**'
              - 'pyproject.toml'
              - 'uv.lock'
              - 'Dockerfile'
              - '.github/workflows/**'
            docs:
              - 'docs/**'
              - '*.md'

  quality-checks:
    if: needs.changes.outputs.code == 'true'
    needs: changes
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup UV & Python
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba # v6
        with:
          enable-cache: true
          cache-suffix: quality-${{ env.DEFAULT_PYTHON }}-${{ runner.os }}
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache-dependency-glob: |
            uv.lock
            pyproject.toml
          cache-local-path: ${{ env.UV_CACHE_DIR }}

      - name: Install Dependencies
        run: |
          export UV_CACHE_DIR="${{ env.UV_CACHE_DIR }}"
          uv sync --group=dev --frozen

      - name: Run Linting
        run: |
          echo "::group::Ruff Format Check"
          uv run ruff format --check --diff
          echo "::endgroup::"

          echo "::group::Ruff Lint Check"
          uv run ruff check
          echo "::endgroup::"

      - name: Run Type Checking
        run: |
          echo "::group::MyPy Type Check"
          uv run mypy ./
          echo "::endgroup::"

          echo "::group::BasedPyright Type Check"
          uv run basedpyright ./
          echo "::endgroup::"

  test:
    if: needs.changes.outputs.code == 'true'
    needs: changes
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup UV & Python
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba # v6
        with:
          enable-cache: true
          cache-suffix: test-${{ matrix.python-version }}-${{ runner.os }}
          python-version: ${{ matrix.python-version }}
          cache-dependency-glob: |
            uv.lock
            pyproject.toml
          cache-local-path: ${{ env.UV_CACHE_DIR }}

      - name: Install Dependencies
        run: |
          export UV_CACHE_DIR="${{ env.UV_CACHE_DIR }}"
          uv sync --group=dev --frozen

      - name: Run Tests
        run: uv run pytest --junit-xml=test-results.xml -n auto --maxfail=5

      - name: Upload Coverage
        if: matrix.python-version == '3.13'
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: test-results-py${{ matrix.python-version }}
          path: |
            test-results.xml
            coverage.xml
          if-no-files-found: ignore

  security-analysis:
    if: needs.changes.outputs.code == 'true'
    needs: changes
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Setup UV & Python
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba # v6
        with:
          enable-cache: true
          cache-suffix: security-${{ env.DEFAULT_PYTHON }}-${{ runner.os }}
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache-dependency-glob: |
            uv.lock
            pyproject.toml
          cache-local-path: ${{ env.UV_CACHE_DIR }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@181d5eefc20863364f96762470ba6f862bdef56b # v3
        with:
          languages: python

      - name: Install Dependencies & Generate Coverage
        run: |
          export UV_CACHE_DIR="${{ env.UV_CACHE_DIR }}"
          uv sync --group=dev --frozen
          uv run pytest

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@2500896589ef8f7247069a56136f8dc177c27ccf # v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Run Security Scans
        run: |
          echo "::group::Bandit Security Scan"
          uv run bandit -r src/ -f sarif -o bandit.sarif || true
          echo "::endgroup::"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # 0.31.0
        with:
          scan-type: 'fs'
          skip-dirs: '.git,.github,.venv,docs/_build'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@181d5eefc20863364f96762470ba6f862bdef56b # v3

      - name: Upload Security Results
        if: always()
        uses: github/codeql-action/upload-sarif@181d5eefc20863364f96762470ba6f862bdef56b # v3
        with:
          sarif_file: bandit.sarif
          category: bandit

      - name: Upload Trivy Results
        if: always()
        uses: github/codeql-action/upload-sarif@181d5eefc20863364f96762470ba6f862bdef56b # v3
        with:
          sarif_file: trivy-results.sarif

  docs:
    if: needs.changes.outputs.docs == 'true' || needs.changes.outputs.code == 'true'
    needs: changes
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup UV & Python
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba # v6
        with:
          enable-cache: true
          cache-suffix: docs-${{ env.DEFAULT_PYTHON }}-${{ runner.os }}
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache-dependency-glob: |
            uv.lock
            pyproject.toml
          cache-local-path: ${{ env.UV_CACHE_DIR }}

      - name: Install Dependencies & Build Docs
        run: |
          export UV_CACHE_DIR="${{ env.UV_CACHE_DIR }}"
          uv sync --group=docs --frozen
          rm -rf docs/_build
          uv run sphinx-build docs docs/_build/html -W

      - name: Deploy to Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
