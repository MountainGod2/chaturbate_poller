name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  merge_group:
  workflow_dispatch:

env:
  DEFAULT_PYTHON: "3.13"
  UV_CACHE_DIR: /tmp/uv-cache
  FORCE_COLOR: "1"

permissions:
  contents: read
  security-events: write
  pull-requests: write
  checks: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  changes:
    runs-on: ubuntu-24.04
    outputs:
      code: ${{ steps.filter.outputs.code }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: dorny/paths-filter@7267a8516b6f92bdb098633497bad573efdbf271 # v2
        id: filter
        with:
          filters: |
            code:
              - 'src/**'
              - 'tests/**'
              - 'pyproject.toml'
              - 'uv.lock'
              - 'Dockerfile'
              - '.github/workflows/**'
            docs:
              - 'docs/**'
              - '*.md'

  quality-checks:
    if: needs.changes.outputs.code == 'true'
    needs: changes
    uses: ./.github/workflows/_shared-build-test.yml
    with:
      python-version: '3.13'
      install-groups: 'dev'
      run-lint: true
      run-type-check: true
      artifact-suffix: quality

  test:
    if: needs.changes.outputs.code == 'true'
    needs: changes
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
    uses: ./.github/workflows/_shared-build-test.yml
    with:
      python-version: ${{ matrix.python-version }}
      install-groups: 'dev'
      run-tests: true
      coverage-upload: ${{ matrix.python-version == '3.13' }}
      artifact-suffix: py${{ matrix.python-version }}
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  sonar-codeql-analysis:
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Setup UV & Python
        uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1 # v6
        with:
          enable-cache: true
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Install Dependencies & Generate Coverage
        run: |
          uv sync --group=dev
          uv run pytest

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@2500896589ef8f7247069a56136f8dc177c27ccf # v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - uses: github/codeql-action/init@ce28f5bb42b7a9f2c824e633a3f6ee835bab6858 # v3
        with:
          languages: python

      - uses: github/codeql-action/analyze@ce28f5bb42b7a9f2c824e633a3f6ee835bab6858 # v3

  docs:
    permissions:
      contents: write
    if: needs.changes.outputs.docs == 'true' || needs.changes.outputs.code == 'true'
    needs: changes
    uses: ./.github/workflows/_shared-build-test.yml
    with:
      python-version: '3.13'
      install-groups: 'docs'
      extra-commands: |
        rm -rf docs/_build
        uv run sphinx-build docs docs/_build/html -W

  docs-deploy:
    permissions:
      contents: write
    needs: docs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1 # v6
        with:
          enable-cache: true
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Install Dependencies & Build Docs
        run: |
          uv sync --group=docs
          rm -rf docs/_build
          uv run sphinx-build docs docs/_build/html -W

      - name: Deploy to Pages
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
