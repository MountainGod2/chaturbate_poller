name: Security Scanning

on:
  schedule:
    - cron: "0 2 * * 1" # Weekly on Mondays at 2 AM UTC
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  security-events: write
  contents: read
  actions: read

jobs:
  security-scan:
    name: Security Analysis
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up UV & Python
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: "3.13"
          cache-dependency-glob: uv.lock

      - name: Install Dependencies
        run: uv sync

      - name: Run Bandit Security Scan
        run: |
          uv run --with bandit bandit -r src -f json -o bandit-report.json
        continue-on-error: true
        id: bandit

      - name: Upload Bandit Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: bandit-report.json
          category: security
        if: steps.bandit.outcome == 'success'

      - name: Run Safety Check
        run: |
          uv run --with safety safety check --output json --save-json safety-report.json
        continue-on-error: true

      - name: Upload Security Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json
          retention-days: 30
        if: always()

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sbom-generation:
    name: Generate SBOM
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up UV & Python
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: "3.13"

      - name: Install Dependencies
        run: uv sync

      - name: Generate SBOM
        run: |
          uv run --with pip-audit pip-audit --format=cyclonedx-json --output=sbom.json
        continue-on-error: true

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
          retention-days: 90
