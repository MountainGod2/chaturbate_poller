name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types: [completed]
  push:
    tags:
      - 'v**'

jobs:
  deploy:
    name: Deployment Job
    runs-on: ubuntu-24.04
    if: ${{ github.event.workflow_run.conclusion == 'success' || startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Install Dependencies
        uses: ./.github/workflows/install-dependencies.yml
        with:
          python-version: '3.12'

      - name: Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9
        with:
          github_token: '${{ secrets.GH_PAT }}'

      - name: Publish to TestPyPI
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@v1.12.2
        with:
          repository-url: 'https://test.pypi.org/legacy/'
          attestations: false

      - name: Test Install from TestPyPI
        if: steps.release.outputs.released == 'true'
        run: uv pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple chaturbate-poller

      - name: Publish to PyPI
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@v1.12.2

      - name: Generate Docker Build Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/mountaingod2/chaturbate_poller
            docker.io/mountaingod2/chaturbate_poller
          tags: |
            type=schedule,pattern=nightly
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
          annotations: |
            org.opencontainers.image.title=Chaturbate Poller
            org.opencontainers.image.description=Docker image for Chaturbate Poller application
            org.opencontainers.image.url=https://github.com/mountaingod2/chaturbate_poller
            org.opencontainers.image.source=https://github.com/mountaingod2/chaturbate_poller

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Export Test Image
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: mountaingod2/chaturbate_poller:test

      - name: Test Docker Image
        run: |
          docker run --rm mountaingod2/chaturbate_poller:test --help

      - name: Build and Push Docker Image
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64,linux/arm64
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}-cache,mode=max
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}-cache

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v1
        id: attest
        with:
          subject-name: ghcr.io/mountaingod2/chaturbate_poller
          subject-digest: ${{ steps.push.outputs.digest }}

      - name: Image Digest
        run: echo ${{ steps.push.outputs.digest }}
