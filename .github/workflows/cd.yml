name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types: [completed]

env:
  UV_CACHE_DIR: /tmp/.uv-cache

jobs:
  release:
    name: Release Deployment
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    concurrency:
      group: ${{ github.workflow }}

    steps:
      - name: Setup | Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Setup | Configure UV Environment
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Dependencies | Install and Sync Dependencies
        run: uv sync

      - name: Release | Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9
        with:
          github_token: ${{ secrets.GH_PAT }}
          git_committer_name: 'MountainGod2'
          git_committer_email: 'admin@reid.ca'
          ssh_private_signing_key: ${{ secrets.GIT_COMMIT_SSH_PRIV_KEY }}
          ssh_public_signing_key: ${{ secrets.GIT_COMMIT_SSH_PUB_KEY }}

      - name: Publish | PyPI Test
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@v1.12.0
        with:
          repository-url: 'https://test.pypi.org/legacy/'
          attestations: false

      - name: Publish | PyPI Test Install
        if: steps.release.outputs.released == 'true'
        run: uv pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple chaturbate-poller

      - name: Publish | PyPI Release
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@v1.12.0
        with:
          attestations: false

      - name: Publish | GitHub Release
        if: steps.release.outputs.released == 'true'
        uses: python-semantic-release/publish-action@v9
        with:
          github_token: ${{ secrets.GH_PAT }}

      - name: Publish | Docker Meta
        if: steps.release.outputs.released == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/mountaingod2/chaturbate_poller
            docker.io/mountaingod2/chaturbate_poller
          tags: |
            type=schedule,pattern=nightly
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Publish | Set up QEMU
        if: steps.release.outputs.released == 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.release.outputs.released == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Publish | Login to Docker Hub
        if: steps.release.outputs.released == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish | Login to GHCR
        if: steps.release.outputs.released == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish | Build and Push Docker Image
        if: steps.release.outputs.released == 'true'
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          annotations: ${{ steps.meta.outputs.annotations }}
