name: Release

on:
  workflow_run:
    workflows: ["CI"]
    branches: [main]
    types: [completed]
  workflow_dispatch:
    inputs:
      force_release:
        description: "Force release type"
        type: choice
        options: ["auto", "patch", "minor", "major"]
        default: "auto"

env:
  PYTHON_VERSION: "3.13"

permissions:
  contents: write
  packages: write
  id-token: write
  attestations: write

concurrency:
  group: release
  cancel-in-progress: false

jobs:
  validate:
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-24.04
    outputs:
      should-release: ${{ steps.check.outputs.should-release }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
          persist-credentials: false

      - name: Validate Branch Integrity
        id: check
        shell: bash
        run: |
          git reset --hard ${{ github.sha }}
          # Determine upstream branch (useful for avoiding conflicts)
          UPSTREAM_BRANCH_NAME="$(git status -sb | head -n 1 | cut -d' ' -f2 | grep -E '\.{3}' | cut -d'.' -f4)"
          if [ -z "$UPSTREAM_BRANCH_NAME" ]; then
              echo "::error::Unable to determine upstream branch!"
              echo "should-release=false" >> $GITHUB_OUTPUT
              exit 1
          fi

          git fetch "${UPSTREAM_BRANCH_NAME%%/*}"
          if ! UPSTREAM_SHA="$(git rev-parse "$UPSTREAM_BRANCH_NAME")"; then
              echo "::error::Unable to determine upstream sha!"
              echo "should-release=false" >> $GITHUB_OUTPUT
              exit 1
          fi
          HEAD_SHA="$(git rev-parse HEAD)"
          if [ "$HEAD_SHA" != "$UPSTREAM_SHA" ]; then
              echo "::error::Upstream has changed. Aborting release."
              echo "should-release=false" >> $GITHUB_OUTPUT
              exit 1
          fi

          echo "Branch integrity validated successfully"
          echo "should-release=true" >> $GITHUB_OUTPUT

  release:
    needs: validate
    if: needs.validate.outputs.should-release == 'true'
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.release.outputs.version }}
      released: ${{ steps.release.outputs.released }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
          persist-credentials: false

      - uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - run: uv sync

      - name: Create Release
        id: release
        uses: python-semantic-release/python-semantic-release@f9e152fb36cd2e590fe8c2bf85bbff08f7fc1c52 # v10
        with:
          github_token: ${{ secrets.GH_PAT }}

  publish:
    needs: release
    if: needs.release.outputs.released == 'true'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: v${{ needs.release.outputs.version }}

      - uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - run: uv build

      # Test on TestPyPI first
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          attestations: true

      # Verify installation works
      - name: Verify TestPyPI
        run: |
          for i in {1..20}; do
            echo "Attempt $i: Verifying installation from TestPyPI..."
            if pip install --index-url https://test.pypi.org/simple/ chaturbate-poller==${{ needs.release.outputs.version }}; then
              echo "TestPyPI verification successful"
              exit 0
            fi
            sleep 15
          done
          exit 1

      # Publish to PyPI
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true

      - uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2
        with:
          subject-path: dist/*

  trigger-docker:
    needs: [release, publish]
    if: needs.release.outputs.released == 'true'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'container.yml',
              ref: 'main'
            });
