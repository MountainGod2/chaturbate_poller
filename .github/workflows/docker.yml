name: Docker Image Build & Publish

on:
  workflow_dispatch:
  schedule:
    - cron: "0 10 * * *"  # Daily at 10:00 UTC
  push:
    tags:
      - v**
  merge_group:

env:
  IMAGE_NAME: ghcr.io/mountaingod2/chaturbate_poller

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write
  security-events: write

jobs:
  docker:
    name: Build, Test & Publish Docker Image
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
      fail-fast: true
    timeout-minutes: 60
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Generate Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/mountaingod2/chaturbate_poller
            docker.io/mountaingod2/chaturbate_poller
          tags: |
            type=schedule,pattern=nightly
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
          buildkitd-flags: --debug

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Export Test Image (local)
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: mountaingod2/chaturbate_poller:test

      - name: Test Docker Image
        run: docker run --rm mountaingod2/chaturbate_poller:test --help

      - name: Build and Push Multi-Platform Image
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}
          provenance: true
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}-cache-${{ matrix.platform }}
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}-cache-${{ matrix.platform }},mode=max
          build-args: |
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            VCS_REF=${{ github.sha }}
            VERSION=${{ github.ref_name }}

      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: mountaingod2/chaturbate_poller:test
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy Results to Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
          wait-for-processing: true
          category: trivy-${{ steps.meta.outputs.version }}

      - name: Attest Docker Provenance
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
