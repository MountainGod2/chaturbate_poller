name: Dependency Review

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    name: Check Dependency Changes
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Enforce Lockfile Presence
        run: |
          set -euo pipefail
          if [ ! -f uv.lock ]; then
            echo "::error::uv.lock is missing. Please run 'uv pip compile' and commit the lockfile."
            exit 1
          fi
        shell: bash

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          comment-summary-in-pr: true
          allow-licenses: LGPL-3.0, GPL-3.0, BSD-3-Clause, MIT, Apache-2.0
          vulnerability-check: true

  outdated:
    name: Check Outdated Dependencies
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up UV & Python
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          python-version: "3.13"

      - name: Generate pip-audit Report
        run: |
          uv run --all-groups --with pip-audit pip-audit -f json -o audit.json
        continue-on-error: true

      - name: Upload pip-audit Report
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: audit.json

      - name: Generate Outdated Dependency List
        id: outdated
        run: |
          set -euo pipefail
          uv pip list --outdated > outdated.txt
          echo 'outdated<<EOF' >> $GITHUB_OUTPUT
          cat outdated.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
        continue-on-error: true
        shell: bash

      - name: Upload Outdated Dependencies List
        uses: actions/upload-artifact@v4
        with:
          name: outdated-dependencies
          path: outdated.txt

      - name: Comment PR with Dependency Status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const commentIdentifier = "<!-- dependency-review-comment-identifier -->";
            const outdatedRaw = `${{ steps.outdated.outputs.outdated }}`;
            const outdatedList = outdatedRaw.trim()
              ? "```txt\n" + outdatedRaw.trim() + "\n```"
              : "_All dependencies are up to date._";

            const output = `${commentIdentifier}
            ## Dependency Review Summary

            - Dependency changes reviewed for vulnerabilities
            - License compliance verified
            - Outdated packages:

            ${outdatedList}

            > This is an automated comment by the Dependency Review workflow`;

                        const { data: comments } = await github.rest.issues.listComments({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo
                        });

                        const existingComment = comments.find(comment =>
                          comment.body.includes(commentIdentifier)
                        );

                        if (existingComment) {
                          await github.rest.issues.updateComment({
                            comment_id: existingComment.id,
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            body: output
                          });
                          console.log(`Updated existing comment ID ${existingComment.id}`);
                        } else {
                          await github.rest.issues.createComment({
                            issue_number: context.issue.number,
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            body: output
                          });
                          console.log("Created new comment");
                        }
